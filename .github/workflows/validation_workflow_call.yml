name: Validate Flyway Migration Check
on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string

jobs:
  build:
    name: Validate Flyway Migration Check
    runs-on: ubuntu-latest
    steps:
      - name: Print Inputs
        run: |
          echo "Workflow input: ${{ inputs.target }}"
          INPUT_TARGET=${{ inputs.target }}
          IFS=':' read -ra TARGET_ARR <<< "$INPUT_TARGET"
          echo "Check: ${TARGET_ARR[0]}"
          echo "PR: ${TARGET_ARR[1]}"
          echo "Base: ${TARGET_ARR[2]}"
          echo "check-id=${TARGET_ARR[0]}" >> $GITHUB_ENV
          echo "pr-number=${TARGET_ARR[1]}" >> $GITHUB_ENV
          echo "base-branch=${TARGET_ARR[2]}" >> $GITHUB_ENV
      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.base-branch }}
          fetch-depth: 1
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ env.pr-number }}/merge
          fetch-depth: 1
      - name: Export new migrates
        id: export-new-migrates
        run: |
          git diff --name-only --diff-filter=A origin/${{ env.base-branch }} HEAD | grep -E 'java/db/' > new_migrates.txt || true
          echo "Exported migrates"
          cat new_migrates.txt
      - name: Check migrates empty
        id: check-migrates-empty
        run: |
          if [ ! -s new_migrates.txt ]; then
            echo "skip-steps=true" >> $GITHUB_ENV
            echo "Flyway validation results:" >> $GITHUB_STEP_SUMMARY
            echo "No new migrates, skipping validation" >> $GITHUB_STEP_SUMMARY
            echo "No migrates skipping all following steps"
          else
            echo "skip-steps=false" >> $GITHUB_ENV
            echo "Found new migrates, continue with validation"
          fi
      - name: Parse pom.xml version
        if: env.skip-steps != 'true'
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Set up Java
        if: env.skip-steps != 'true'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Run Java Validation
        id: run-java
        if: env.skip-steps != 'true'
        run: java .github/java/FlywayValidation.java ${{ env.version }} new_migrates.txt
      - name: Update check run fail
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ env.check-id }},
              conclusion: 'failure',
              completed_at: new Date().toISOString(),
              output: {
                title: 'Check failed',
                summary: ${{ steps.run-java.outputs.message }}
              }
            });
      - name: Update check run success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ env.check-id }},
              conclusion: 'success',
              completed_at: new Date().toISOString(),
              output: {
                title: 'Check completed',
                summary: 'All checks passed.'
              }
            });
